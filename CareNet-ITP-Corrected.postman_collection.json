{
	"info": {
		"_postman_id": "d3aaf160-8c64-4c86-bc14-d2a7c9b9ae51",
		"name": "CareNet-ITP-Corrected",
		"description": "Complete API collection for CareNet application with corrected endpoints, proper request formats, and organized structure.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43272181"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "adminToken",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Health Check",
			"item": [
				{
					"name": "Server Status Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Server is running\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.text()).to.include(\"Server is working successfully\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						},
						"description": "Check if the server is running and responding properly."
					},
					"response": []
				}
			],
			"description": "Endpoints to check server health and status."
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.success && jsonData.user && jsonData.user.id) {",
									"        pm.collectionVariables.set(\"userId\", jsonData.user.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@gmail.com\",\n  \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login endpoint for regular users. Returns user information and sets userId variable."
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.token) {",
									"        pm.collectionVariables.set(\"adminToken\", jsonData.token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"login"
							]
						},
						"description": "Admin login endpoint. Returns admin token for administrative operations."
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for users and administrators."
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Retrieve list of all users in the system."
					},
					"response": []
				}
			],
			"description": "User management endpoints."
		},
		{
			"name": "Caregiver Applications",
			"item": [
				{
					"name": "Submit Application (JSON)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "User-ID",
								"value": "{{userId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"caregiverType\": \"ELDER_CARE\",\n  \"address\": \"123 Main Street\",\n  \"city\": \"Springfield\",\n  \"state\": \"IL\",\n  \"zipCode\": \"62701\",\n  \"dateOfBirth\": \"1990-05-15\",\n  \"ssn\": \"123-45-6789\",\n  \"emergencyContactName\": \"Jane Doe\",\n  \"emergencyContactPhone\": \"+1987654321\",\n  \"experience\": \"5 years of experience in elderly care\",\n  \"certifications\": \"CNA, CPR Certified, First Aid\",\n  \"availability\": \"Monday to Friday: 9 AM - 5 PM\",\n  \"specializations\": \"Alzheimer's care, Physical therapy assistance\",\n  \"email\": \"john.doe@email.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/apply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"apply"
							]
						},
						"description": "Submit a new caregiver application with JSON data only."
					},
					"response": []
				},
				{
					"name": "Submit Application with Files",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "User-ID",
								"value": "{{userId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "applicationData",
									"value": "{\"caregiverType\":\"ELDER_CARE\",\"address\":\"123 Main Street\",\"city\":\"Springfield\",\"state\":\"IL\",\"zipCode\":\"62701\",\"dateOfBirth\":\"1990-05-15\",\"ssn\":\"123-45-6789\",\"emergencyContactName\":\"Jane Doe\",\"emergencyContactPhone\":\"+1987654321\",\"experience\":\"5 years of experience in elderly care\",\"certifications\":\"CNA, CPR Certified, First Aid\",\"availability\":\"Monday to Friday: 9 AM - 5 PM\",\"specializations\":\"Alzheimer's care, Physical therapy assistance\",\"email\":\"john.doe@email.com\"}",
									"type": "text"
								},
								{
									"key": "files",
									"type": "file",
									"src": [],
									"description": "Upload required documents (certificates, ID, etc.)"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/apply-with-files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"apply-with-files"
							]
						},
						"description": "Submit caregiver application with supporting documents."
					},
					"response": []
				},
				{
					"name": "Get My Applications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-ID",
								"value": "{{userId}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/my-applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"my-applications"
							]
						},
						"description": "Get all caregiver applications submitted by the current user."
					},
					"response": []
				},
				{
					"name": "Get Application by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-ID",
								"value": "{{userId}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"1"
							]
						},
						"description": "Get specific caregiver application by ID (user must own the application)."
					},
					"response": []
				},
				{
					"name": "Update Application",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "User-ID",
								"value": "{{userId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"caregiverType\": \"CHILD_CARE\",\n  \"address\": \"456 Updated Street\",\n  \"city\": \"Updated City\",\n  \"state\": \"CA\",\n  \"zipCode\": \"90210\",\n  \"dateOfBirth\": \"1990-01-01\",\n  \"ssn\": \"987-65-4321\",\n  \"emergencyContactName\": \"Jane Updated\",\n  \"emergencyContactPhone\": \"+1234567890\",\n  \"experience\": \"6 years experience in child care\",\n  \"certifications\": \"CNA, First Aid, CPR, BLS\",\n  \"availability\": \"Monday to Sunday, flexible hours\",\n  \"specializations\": \"Special needs care, Educational support\",\n  \"email\": \"john.updated@email.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"1"
							]
						},
						"description": "Update an existing caregiver application (only if pending and owned by user)."
					},
					"response": []
				},
				{
					"name": "Delete Application",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "User-ID",
								"value": "{{userId}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"1"
							]
						},
						"description": "Delete a caregiver application (only if pending and owned by user)."
					},
					"response": []
				},
				{
					"name": "Upload Files to Application",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "User-ID",
								"value": "{{userId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "files",
									"type": "file",
									"src": [],
									"description": "Select files to upload"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/1/files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"1",
								"files"
							]
						},
						"description": "Upload additional files to an existing caregiver application."
					},
					"response": []
				},
				{
					"name": "Get Dashboard Data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-ID",
								"value": "{{userId}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/dashboard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"dashboard"
							]
						},
						"description": "Get dashboard data including application statistics for the current user."
					},
					"response": []
				},
				{
					"name": "Export Application to PDF",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-ID",
								"value": "{{userId}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/1/export",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"1",
								"export"
							]
						},
						"description": "Export caregiver application to PDF format."
					},
					"response": []
				},
				{
					"name": "Get QR Code for Application",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-ID",
								"value": "{{userId}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/1/qrcode",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"1",
								"qrcode"
							]
						},
						"description": "Get QR code for approved caregiver application."
					},
					"response": []
				},
				{
					"name": "Get Caregiver Profile by User ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-ID",
								"value": "{{userId}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/profile/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"profile",
								"{{userId}}"
							]
						},
						"description": "Get caregiver profile information by user ID."
					},
					"response": []
				}
			],
			"description": "Endpoints for managing caregiver applications from the user perspective."
		},
		{
			"name": "Admin - Caregiver Management",
			"item": [
				{
					"name": "Get All Caregivers (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Role",
								"value": "ADMIN"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/admin/caregivers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"caregivers"
							],
							"query": [
								{
									"key": "search",
									"value": "",
									"disabled": true,
									"description": "Search term for filtering caregivers"
								},
								{
									"key": "status",
									"value": "",
									"disabled": true,
									"description": "Filter by status (PENDING, APPROVED, REJECTED)"
								}
							]
						},
						"description": "Get all caregiver applications with optional search and status filters."
					},
					"response": []
				},
				{
					"name": "Get All Applications (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Role",
								"value": "ADMIN"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/admin/all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"admin",
								"all"
							]
						},
						"description": "Get all caregiver applications (admin endpoint)."
					},
					"response": []
				},
				{
					"name": "Get Pending Applications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Role",
								"value": "ADMIN"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/admin/pending",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"admin",
								"pending"
							]
						},
						"description": "Get all pending caregiver applications."
					},
					"response": []
				},
				{
					"name": "Approve Application",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "User-ID",
								"value": "1",
								"description": "Admin user ID"
							},
							{
								"key": "User-Role",
								"value": "ADMIN"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"notes\": \"Application approved after thorough review. All documents verified.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/admin/1/approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"admin",
								"1",
								"approve"
							]
						},
						"description": "Approve a caregiver application."
					},
					"response": []
				},
				{
					"name": "Reject Application",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "User-ID",
								"value": "1",
								"description": "Admin user ID"
							},
							{
								"key": "User-Role",
								"value": "ADMIN"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"notes\": \"Application rejected due to incomplete documentation.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/admin/1/reject",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"admin",
								"1",
								"reject"
							]
						},
						"description": "Reject a caregiver application with notes."
					},
					"response": []
				},
				{
					"name": "Verify Caregiver (Legacy)",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/caregivers/1/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"caregivers",
								"1",
								"verify"
							]
						},
						"description": "Legacy endpoint to verify/approve caregiver."
					},
					"response": []
				},
				{
					"name": "Reject Caregiver (Admin)",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/caregivers/1/reject",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"caregivers",
								"1",
								"reject"
							]
						},
						"description": "Admin endpoint to reject caregiver application."
					},
					"response": []
				},
				{
					"name": "Update Caregiver Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"APPROVED\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/caregivers/1/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"caregivers",
								"1",
								"status"
							]
						},
						"description": "Update caregiver application status."
					},
					"response": []
				},
				{
					"name": "Delete Caregiver Application",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/caregivers/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"caregivers",
								"1"
							]
						},
						"description": "Delete a caregiver application (admin only)."
					},
					"response": []
				}
			],
			"description": "Admin endpoints for managing caregiver applications."
		},
		{
			"name": "File Management",
			"item": [
				{
					"name": "Download Document by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/documents/1/download",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"documents",
								"1",
								"download"
							]
						},
						"description": "Download a document by its ID."
					},
					"response": []
				},
				{
					"name": "Download Document (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/download-document/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"download-document",
								"1"
							]
						},
						"description": "Legacy endpoint for downloading documents."
					},
					"response": []
				},
				{
					"name": "Download File by ID (Simple)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/files/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files",
								"1"
							]
						},
						"description": "Simple file download endpoint."
					},
					"response": []
				},
				{
					"name": "Update File Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"APPROVED\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/files/1/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"files",
								"1",
								"status"
							]
						},
						"description": "Update the status of a document/file."
					},
					"response": []
				}
			],
			"description": "File and document management endpoints."
		},
		{
			"name": "Admin - System Management",
			"item": [
				{
					"name": "Create Sample Data",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/create-sample-data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"create-sample-data"
							]
						},
						"description": "Create sample caregiver data for testing purposes."
					},
					"response": []
				},
				{
					"name": "Update Document Types",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/caregivers/admin/update-document-types?role=ADMIN",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"caregivers",
								"admin",
								"update-document-types"
							],
							"query": [
								{
									"key": "role",
									"value": "ADMIN"
								}
							]
						},
						"description": "Update existing document types in the database."
					},
					"response": []
				}
			],
			"description": "System management endpoints for administrators."
		},
		{
			"name": "Testing & Debug",
			"item": [
				{
					"name": "Test Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/test-users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"test-users"
							]
						},
						"description": "Test endpoint to check user data in database."
					},
					"response": []
				},
				{
					"name": "Test Admin User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/test-admin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"test-admin"
							]
						},
						"description": "Test endpoint to check admin user data in database."
					},
					"response": []
				},
				{
					"name": "Fix Null Active Users",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/fix-null-active",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"fix-null-active"
							]
						},
						"description": "Test endpoint to provide guidance on fixing null is_active values."
					},
					"response": []
				}
			],
			"description": "Testing and debugging endpoints (should be removed in production)."
		}
	]
}